@page "/LionProfile/Search"
@model LionPet_Web.Pages.LionProfiles.SearchModel

@{
	ViewData["Title"] = "Index";
}

<h1>Lion Profile Table</h1>

<form method="get" action="/LionProfile/Search" class="mb-3 d-flex gap-2 align-items-end">
	<div>
		<label for="Weight">Weight</label>
		<input type="number" step="any" class="form-control" id="Weight" name="SearchWeight" value="@Model.SearchWeight" />
	</div>
	<div>
		<label for="LionTypeName">Lion Type Name</label>
		<input type="text" class="form-control" id="LionTypeName" name="SearchLionTypeName" value="@Model.SearchLionTypeName" />
	</div>
	<button type="submit" class="btn btn-primary">Search</button>
	<button type="reset" class="btn btn-secondary" onclick="window.location.href='/LionProfile/Index'">Reset</button>
</form>

<p>
	<a asp-page="Create">Create New</a>
</p>
<table class="table">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.LionProfile[0].LionName)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.LionProfile[0].Weight)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.LionProfile[0].Characteristics)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.LionProfile[0].Warning)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.LionProfile[0].ModifiedDate)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.LionProfile[0].LionType)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.LionProfile[0].LionType.LionTypeName)
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody id="lionProfilesTBodyId">
		@foreach (var item in Model.LionProfile)
		{
			<tr id="@item.LionProfileId">
				<td>
					@Html.DisplayFor(modelItem => item.LionName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Weight)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Characteristics)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Warning)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.ModifiedDate)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.LionType.LionTypeId)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.LionType.LionTypeName)
				</td>
				<td>
					<a asp-page="./Edit" asp-route-id="@item.LionProfileId">Edit</a> |
					<a asp-page="./Details" asp-route-id="@item.LionProfileId">Details</a> |
					<a asp-page="./Delete" asp-route-id="@item.LionProfileId">Delete</a>
				</td>
			</tr>
		}
	</tbody>
</table>

<div class="d-flex justify-content-between align-items-center">
	<div>
		Showing @((Model.CurrentPage - 1) * Model.PageSize + 1) to
		@Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalCount)
		of @Model.TotalCount entries
	</div>
	<nav aria-label="Page navigation">
		<ul class="pagination">
			@if (Model.HasPreviousPage)
			{
				<li class="page-item">
					<a class="page-link" asp-page="./Index" asp-route-pageIndex="@(Model.CurrentPage - 1)">
						Previous
					</a>
				</li>
			}
			else
			{
				<li class="page-item disabled">
					<span class="page-link">Previous</span>
				</li>
			}
			@for (int i = 1; i <= Model.TotalPages; i++)
			{
				var activeClass = i == Model.CurrentPage ? "active" : "";
				<li class="page-item @activeClass">
					<a class="page-link" asp-page="./Index" asp-route-pageIndex="@i">@i</a>
				</li>
			}
			@if (Model.HasNextPage)
			{
				<li class="page-item">
					<a class="page-link" asp-page="./Index" asp-route-pageIndex="@(Model.CurrentPage + 1)">
						Next
					</a>
				</li>
			}
			else
			{
				<li class="page-item disabled">
					<span class="page-link">Next</span>
				</li>
			}
		</ul>
	</nav>
</div>

<script src="~/js/signalr/dist/browser/signalr.js"></script>

<script>
	"use strict";

	var connection = new signalR.HubConnectionBuilder().withUrl("/LionProfileHub").build();

	connection.start().then(function () {
		console.log("Connected to the SignalR Hub");
	}).catch(function (err) {
		return console.error(err.toString());
	});

	// connection.on("ReceiveDelete_LionProfile", function (lionProfileId) {
	// 	$('#lionProfilesTBodyId').find(`tr[id='${lionProfileId}']`).fadeOut(300, function() {
	// 		$(this).remove();
	// 	});
	// });
	connection.on("ReceiveDelete_LionProfile", function (lionProfileId) {
		// Lấy current page từ URL hoặc từ server
		var currentPage = @Model.CurrentPage;
		var totalPages = @Model.TotalPages;

		// Xóa row với animation
		$('#lionProfilesTBodyId').find(`tr[id='${lionProfileId}']`).fadeOut(300, function() {
			$(this).remove();

			// Kiểm tra nếu page hiện tại không còn item và không phải page đầu
			var remainingItems = $('#lionProfilesTBodyId tr').length;

			if (remainingItems === 0 && currentPage > 1) {
				// Redirect về page trước đó nếu page hiện tại trống
				window.location.href = `/LionProfile/Index?pageIndex=${currentPage - 1}`;
			} else if (remainingItems < @Model.PageSize && currentPage <= totalPages) {
				// Reload page hiện tại để cập nhật pagination
				window.location.href = `/LionProfile/Index?pageIndex=${currentPage}`;
			}
		});
	});
</script>
