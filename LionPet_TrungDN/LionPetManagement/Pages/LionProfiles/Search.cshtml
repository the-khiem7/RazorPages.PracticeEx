@page
@model LionPetManagement_DoanNgocTrung.Pages.LionProfiles.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>

<form method="get">
    <input type="text" name="liontypename" value="@Request.Query["liontypename"]" placeholder="lion type name" />
    <input type="number" step="0.01" name="weight" value="@Request.Query["weight"]" placeholder="weight" />
    <button type="submit">search</button>
</form>

<table class="table" id="itemTable">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.LionProfile[0].LionName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LionProfile[0].Weight)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LionProfile[0].Characteristics)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LionProfile[0].Warning)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LionProfile[0].ModifiedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LionProfile[0].LionType.LionTypeName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody id="lionProfileTBodyId">
        @foreach (var item in Model.LionProfile)
        {
            <tr id="@item.LionProfileId">
                <td>
                    @Html.DisplayFor(modelItem => item.LionName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Weight)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Characteristics)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Warning)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ModifiedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LionType.LionTypeName)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.LionProfileId">Edit</a> |
                    <a asp-page="./Detail" asp-route-id="@item.LionProfileId">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.LionProfileId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@* TRƯỚC KHI PHÂN TRANG BẮT BUỘC PHẢI GÁN ID CHO TABLE VÀ TBODY *@



@*Pagination logic for search function*@

@if (Model.LionProfile.Count > 3)
{
    <nav>
        <ul class="pagination" id="paginationContainer"></ul>
    </nav>

}
@section Scripts {
    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const pageSize = 3;
            const rows = document.querySelectorAll('#lionProfileTBodyId tr');
            const totalRows = rows.length;
            const totalPages = Math.ceil(totalRows / pageSize);
            const paginationContainer = document.getElementById('paginationContainer');
            let currentPage = 1;

            function showPage(page) {
                const startIndex = (page - 1) * pageSize;
                rows.forEach((row, index) => {
                    row.style.display = (index >= startIndex && index < startIndex + pageSize) ? '' : 'none';
                });
                if (paginationContainer) {
                    paginationContainer.querySelectorAll('.page-item').forEach((item, idx) => {
                        if (idx === page - 1) {
                            item.classList.add('active');
                        } else {
                            item.classList.remove('active');
                        }
                    });
                }
                currentPage = page;
            }

            if (paginationContainer) {
                paginationContainer.innerHTML = '';
                for (let i = 1; i <= totalPages; i++) {
                    const li = document.createElement('li');
                    li.className = 'page-item';
                    const a = document.createElement('a');
                    a.className = 'page-link';
                    a.href = '#';
                    a.innerText = i;
                    a.onclick = function () {
                        showPage(i);
                        return false;
                    };
                    li.appendChild(a);
                    paginationContainer.appendChild(li);
                }
            }
            showPage(1);

            // SignalR setup
            var connection = new signalR.HubConnectionBuilder().withUrl("/LionProfileHub").build();

            connection.start().then(function () {
                console.log("Connected to the SignalR Hub");
            }).catch(function (err) {
                return console.error(err.toString());
            });

            connection.on("Receiver_DeleteProfileService", function (LionProfileId) {
                $('#lionProfileTBodyId').find(`tr[id='${LionProfileId}']`).remove();
                // Refresh pagination after deletion
                showPage(currentPage);
            });
        });
    </script>
    }







